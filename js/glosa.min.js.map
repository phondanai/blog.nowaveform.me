{"version":3,"sources":["main.js"],"names":["URL_API","ENDPOINT_COMMENTS_API","ENDPOINT_GET_TOKEN_API","ANIMATION_CLOSE_FORM_SEND","ANIMATION_CLOSE_FORM","MAX_LENGTH_AUTHOR","formatEllipsisAuthor","text","length","concat","slice","app","Vue","el","data","comments","token","undefined","showNewComment","reply","newCommentParent","newCommentAuthor","newCommentContent","policy","loadingNewComment","stateNewComment","mounted","this","getComments","computed","commentsParent","R","filter","item","deep","replyComment","_this","head","comment","id","isSubmit","methods","_this2","axios","method","url","params","getURL","then","response","setTimeout","closeNewComment","addComment","_this3","parent","author","message","thread","error","console","log","getToken","_this4","getCommentsChilds","split","location","href","openNewComment","arguments","_this5","sendNewComment","component","props","Number","Object","maxDeep","template","document","querySelector","innerHTML","fields","_this6","childs","_this7","formatDate","unixtime","DATE","Date","getDate","getMonth","getFullYear","filterHTMLTags","myElement","createElement","textContent","openReply"],"mappings":"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","file":"glosa.min.js","sourcesContent":["const URL_API = 'https://glosa.nowaveform.me';\nconst ENDPOINT_COMMENTS_API = '/api/v1/comments/';\nconst ENDPOINT_GET_TOKEN_API = '/api/v1/captcha/';\nconst ANIMATION_CLOSE_FORM_SEND = 2000;\nconst ANIMATION_CLOSE_FORM = 500;\n\n/**\n  * Main\n  */\nconst MAX_LENGTH_AUTHOR = 15;\n\nfunction formatEllipsisAuthor(text) {\n    return text.length > MAX_LENGTH_AUTHOR ? `${text.slice(0, MAX_LENGTH_AUTHOR - 3)}...` : text;\n}\n\n/**\n  * Vue APP\n **/\nlet app = new Vue({\n    el: '#app-comments',\n    data: {\n        comments: [],\n        token: undefined,\n        showNewComment: false,\n        reply: undefined,\n        newCommentParent: undefined,\n        newCommentAuthor: '',\n        newCommentContent: '',\n        policy: false,\n        loadingNewComment: false,\n        stateNewComment: undefined\n    },\n    mounted: function () {\n        this.getComments();\n    },\n    computed: {\n        commentsParent: function () {\n            return R.filter(item => item.deep === 0, this.comments);\n        },\n        replyComment: function () {\n            return R.head(R.filter(comment => comment.id === this.reply, this.comments));\n        },\n        isSubmit: function () {\n            return this.policy && this.newCommentAuthor !== '' && this.newCommentAuthor !== undefined && this.newCommentContent !== '' && this.newCommentContent !== undefined;\n        }\n    },\n    methods: {\n        getComments: function () {\n            axios({\n                method: 'get',\n                url: URL_API + ENDPOINT_COMMENTS_API,\n                params: {\n                    url: this.getURL()\n                }\n            })\n                .then(response => {\n                    this.comments = response.data;\n                    // Close form new comment\n                    setTimeout(() => {\n                        this.closeNewComment();\n                    }, ANIMATION_CLOSE_FORM);\n                });\n        },\n        addComment: function () {\n            this.loadingNewComment = true;\n            axios({\n                method: 'post',\n                url: URL_API + ENDPOINT_COMMENTS_API,\n                data: {\n                    parent: this.newCommentParent,\n                    token: this.token,\n                    author: this.newCommentAuthor,\n                    message: this.newCommentContent,\n                    thread: this.getURL()\n                }\n            })\n                .then(response => {\n                    this.stateNewComment = 'success';\n                    this.getComments();\n                })\n                .catch(error => {\n                    console.log(error);\n                    this.stateNewComment = 'error';\n                    setTimeout(() => {\n                        this.stateNewComment = undefined;\n                    }, ANIMATION_CLOSE_FORM_SEND);\n                })\n                .then(() => {\n                    // always executed\n                    this.loadingNewComment = false;\n                });\n\n        },\n        getToken: function () {\n            axios({\n                method: 'get',\n                url: URL_API + ENDPOINT_GET_TOKEN_API,\n                params: {\n                    url: this.getURL()\n                }\n            })\n                .then(response => {\n                    this.token = response.data.token;\n                });\n        },\n        getCommentsChilds: function (id) {\n            return R.filter(item => item.parent === id, this.comments);\n        },\n        getURL: function () {\n            return R.head(R.split('?', R.head(R.split('#', location.href))));\n        },\n        openNewComment: function (id = undefined) {\n            this.getToken();\n            this.reply = id;\n            this.showNewComment = true;\n            this.newCommentParent = id !== undefined ? id : '';\n        },\n        closeNewComment: function () {\n            // Clean data\n            this.showNewComment = false;\n            // Hide reply finish animation\n            setTimeout(() => {\n                this.newCommentParent = undefined;\n                this.newCommentAuthor = undefined;\n                this.newCommentContent = undefined;\n                this.reply = undefined;\n                this.stateNewComment = undefined;\n                this.policy = false;\n            }, ANIMATION_CLOSE_FORM);\n        },\n        formatEllipsisAuthor: formatEllipsisAuthor,\n        sendNewComment: function () {\n            this.addComment();\n        }\n    }\n});\n\n/**\n * Vue component: comment\n **/\nVue.component('comment', {\n    props: {\n        id: Number,\n        comments: Object\n    },\n    data: function () {\n        return {\n            maxDeep: 4\n        };\n    },\n    template: document.querySelector('template#comment').innerHTML,\n    computed: {\n        fields: function () {\n            return R.head(R.filter((item) => item.id === this.id, this.comments));\n        },\n        childs: function () {\n            return R.filter(item => item.parent === this.id, this.comments);\n        }\n    },\n    methods: {\n        formatDate: function (unixtime) {\n            const DATE = new Date(unixtime * 1000);\n            return `${DATE.getDate()}/${DATE.getMonth() + 1}/${DATE.getFullYear()}`;\n        },\n        filterHTMLTags: function (text) {\n            let myElement = document.createElement('div');\n            myElement.innerHTML = text;\n            return myElement.textContent;\n        },\n        openReply: function (id) {\n            app.openNewComment(id);\n        },\n        formatEllipsisAuthor: formatEllipsisAuthor\n    }\n});\n"]}